{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PeroyNel\\\\Desktop\\\\crypto-application\\\\src\\\\components\\\\Cryptodetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Select;\nconst {\n  Options\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _data$data, _data$data2, _data$data3;\n\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d');\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  if (isFetching) return 'Loading...';\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 101\n    }, this)\n  }, {\n    title: 'Rank',\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 53\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 101\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 107\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 103\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 77\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 81\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 69\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 89\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 113\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 84\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 96\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.coin.name, \" (\", data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.coin.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cryptoDetails.name, \" live price in US Dollar (USD). View value statistics, market cap and supply.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CryptoDetails, \"5n1OqQU56xPgqjymAAdiCUOn9Wo=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["C:/Users/PeroyNel/Desktop/crypto-application/src/components/Cryptodetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","Title","Text","Options","CryptoDetails","coinId","timePeriod","setTimePeriod","data","isFetching","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","name","slug"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport {useParams} from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport {Col,Row,Typography,Select} from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport {useGetCryptoDetailsQuery} from '../services/cryptoApi';\r\n\r\nconst {Title,Text}=Select;\r\nconst{Options}=Select;\r\n\r\nconst CryptoDetails = () => {\r\nconst{ coinId } = useParams();\r\nconst [timePeriod,setTimePeriod] = useState('7d');\r\nconst {data, isFetching}=useGetCryptoDetailsQuery(coinId);\r\nconst cryptoDetails = data?.data?.coin;\r\n\r\nif (isFetching) return 'Loading...';\r\n\r\n\r\nconst time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\nconst stats = [\r\n  { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n  { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n  { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n  { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n  { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n];\r\n\r\nconst genericStats = [\r\n  { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n  { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n  { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n  { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n];\r\n\r\nreturn (\r\n  <Col className=\"coin-detail-container\">\r\n    <Col className=\"coin-heading-container\">\r\n      <Title level={2} className=\"coin-name\">\r\n        {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n      </Title>\r\n      <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      </Col>\r\n);\r\n}\r\n\r\nexport default CryptoDetails"]},"metadata":{},"sourceType":"module"}