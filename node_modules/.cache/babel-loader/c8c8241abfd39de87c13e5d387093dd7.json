{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PeroyNel\\\\Desktop\\\\crypto-app\\\\src\\\\components\\\\Cryptocurrencies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cryptocurrencies = ({\n  simplified\n}) => {\n  _s();\n\n  const count = simplified ? 10 : 100;\n  const {\n    data: cryptosList,\n    isFetching\n  } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    var _cryptosList$data;\n\n    const filteredData = cryptosList === null || cryptosList === void 0 ? void 0 : (_cryptosList$data = cryptosList.data) === null || _cryptosList$data === void 0 ? void 0 : _cryptosList$data.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n  if (isFetching) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-crypto\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search Cryptocurrencies\",\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutters: (32, 32),\n      className: \"crypto-card-container\",\n      children: cryptos === null || cryptos === void 0 ? void 0 : cryptos.map(currency => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        lg: 6,\n        className: \"crypto-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/crypto/${currency.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: `${currency.rank}. ${currency.name}`,\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto-image\",\n              src: currency.iconUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 36\n            }, this),\n            hoverable: true,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \", millify(currency.price)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Market Cap: \", millify(currency.marketCap)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Daily Change: \", millify(currency.change), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cryptocurrencies, \"tOnBd9VKF5REgcQIR1j/Bay78MY=\", false, function () {\n  return [useGetCryptosQuery];\n});\n\n_c = Cryptocurrencies;\nexport default Cryptocurrencies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptocurrencies\");","map":{"version":3,"sources":["C:/Users/PeroyNel/Desktop/crypto-app/src/components/Cryptocurrencies.jsx"],"names":["React","useState","useEffect","millify","Link","Card","Row","Col","Input","useGetCryptosQuery","Cryptocurrencies","simplified","count","data","cryptosList","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","e","target","value","map","currency","id","rank","iconUrl","price","marketCap","change"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n\r\n    const count = simplified ? 10 : 100;\r\n\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    \r\n    useEffect(() => {\r\n        \r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if(isFetching) return 'Loading...';\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search Cryptocurrencies\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n            \r\n            </div>\r\n            <Row gutters={(32,32)} className = \"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`}\r\n                            extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n                            hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                                \r\n\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n\r\n                ))}\r\n\r\n            </Row>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies"]},"metadata":{},"sourceType":"module"}