{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PeroyNel\\\\Desktop\\\\crypto-app\\\\src\\\\components\\\\Cryptodetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst CryptoDetails = () => {\n  _s();\n\n  var _data$data, _data$data2, _data$data3;\n\n  const {\n    coinId\n  } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const {\n    data: coinHistory\n  } = useGetCryptoHistoryQuery({\n    coinId,\n    timeperiod\n  });\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  if (isFetching) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 26\n  }, this);\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Rank',\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 55\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 103\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 109\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 105\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 79\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 83\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 71\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 91\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 115\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 86\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 98\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.coin.name, \" (\", data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.coin.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cryptoDetails.name, \" live Price in US Dollars. View value statistics, market cap and supply.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"7d\",\n      className: \"select-timeperiod\",\n      placeholder: \"Select Timeperiod\",\n      onChange: value => setTimeperiod(value),\n      children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n        children: date\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-value-statistics\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [cryptoDetails.name, \" Value Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"An overview showing the stats of \", cryptoDetails.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), stats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"other-stats-info\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [cryptoDetails.name, \" Value Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"An overview showing the stats of \", cryptoDetails.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this), genericStats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CryptoDetails, \"HnIdBIRokD0sa+fyIOfvzDxVrF0=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery];\n});\n\n_c = CryptoDetails;\nexport default CryptoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDetails\");","map":{"version":3,"sources":["C:/Users/PeroyNel/Desktop/crypto-app/src/components/Cryptodetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","LineChart","Title","Text","Option","CryptoDetails","coinId","timeperiod","setTimeperiod","data","isFetching","coinHistory","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","name","slug","map","date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n      <Col className=\"coin-detail-container\">\r\n          <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live Price in US Dollars.\r\n                    View value statistics, market cap and supply.\r\n\r\n                </p>\r\n          </Col>\r\n          <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n              {time.map((date) => <Option key={date}>{date}</Option>)}\r\n          </Select>\r\n\r\n          <Col className=\"stats-container\">\r\n              <Col className=\"coin-value-statistics\">\r\n                  <Col className=\"coin-value-statistics-heading\">\r\n                      <Title level = {3} className =\"coin-details-heading\">\r\n                          {cryptoDetails.name} Value Statistics\r\n\r\n                      </Title>\r\n                      <p>\r\n                          An overview showing the stats of {cryptoDetails.name}\r\n                      </p>\r\n                  </Col>\r\n                  {stats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                        <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                  ))}\r\n              </Col>\r\n              <Col className=\"other-stats-info\">\r\n                  <Col className=\"coin-value-statistics-heading\">\r\n                      <Title level = {3} className =\"coin-details-heading\">\r\n                          {cryptoDetails.name} Value Statistics\r\n\r\n                      </Title>\r\n                      <p>\r\n                          An overview showing the stats of {cryptoDetails.name}\r\n                      </p>\r\n                  </Col>\r\n                  {genericStats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                        <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                  ))}\r\n              </Col>\r\n          </Col>\r\n\r\n      </Col>\r\n  )\r\n};\r\n\r\nexport default CryptoDetails;"]},"metadata":{},"sourceType":"module"}